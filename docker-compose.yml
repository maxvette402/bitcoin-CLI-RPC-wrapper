version: '3.8'

# =============================================================================
# BITCOIN CLI WRAPPER - DOCKER COMPOSE CONFIGURATION
# =============================================================================

services:
  # ===========================================================================
  # BITCOIN KNOTS NODE
  # ===========================================================================
  bitcoin-node:
    image: bitcoinknots/bitcoind:latest
    container_name: bitcoin-knots-node
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    # Environment variables
    environment:
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-mainnet}
    
    # Configuration volumes
    volumes:
      - bitcoin_data:/bitcoin/.bitcoin
      - ./config/bitcoin.conf:/bitcoin/.bitcoin/bitcoin.conf:ro
      - ./certs:/bitcoin/.bitcoin/certs:ro
      - ./logs/bitcoin:/bitcoin/.bitcoin/logs
    
    # Network ports
    ports:
      - "${BITCOIN_P2P_PORT:-8333}:8333"    # P2P mainnet
      - "${BITCOIN_RPC_PORT:-8332}:8332"    # RPC mainnet
      - "${BITCOIN_TEST_P2P_PORT:-18333}:18333"  # P2P testnet
      - "${BITCOIN_TEST_RPC_PORT:-18332}:18332"  # RPC testnet
    
    # Networks
    networks:
      - bitcoin-network
    
    # Health check
    healthcheck:
      test: ["CMD", "bitcoin-cli", "-rpcuser=${BITCOIN_RPC_USER}", "-rpcpassword=${BITCOIN_RPC_PASSWORD}", "getblockchaininfo"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # ===========================================================================
  # BITCOIN CLI WRAPPER
  # ===========================================================================
  bitcoin-wrapper:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        BUILD_DATE: ${BUILD_DATE:-2024-01-01}
        VERSION: ${VERSION:-1.0.0}
        VCS_REF: ${VCS_REF:-unknown}
    
    container_name: bitcoin-CLI-RPC-weapper
    restart: unless-stopped
    
    # Depends on Bitcoin node
    depends_on:
      bitcoin-node:
        condition: service_healthy
    
    # Environment variables
    environment:
      - BITCOIN_RPC_HOST=bitcoin-node
      - BITCOIN_RPC_PORT=${BITCOIN_RPC_PORT:-8332}
      - BITCOIN_RPC_USER=${BITCOIN_RPC_USER}
      - BITCOIN_RPC_PASSWORD=${BITCOIN_RPC_PASSWORD}
      - BITCOIN_RPC_TIMEOUT=${BITCOIN_RPC_TIMEOUT:-30}
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-mainnet}
      - BITCOIN_RPC_USE_SSL=${BITCOIN_RPC_USE_SSL:-false}
      - BITCOIN_RPC_SSL_VERIFY=${BITCOIN_RPC_SSL_VERIFY:-true}
      - BITCOIN_RPC_SSL_CERT_PATH=${BITCOIN_RPC_SSL_CERT_PATH:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=/app/logs/bitcoin_wrapper.log
    
    # Configuration volumes
    volumes:
      - ./config/.env:/app/.env:ro
      - ./certs:/app/certs:ro
      - wrapper_logs:/app/logs
      - wrapper_config:/app/config
    
    # Docker secrets (alternative to environment variables)
    secrets:
      - bitcoin_rpc_user
      - bitcoin_rpc_password
    
    # Networks
    networks:
      - bitcoin-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python3", "/app/bitcoin_cli_wrapper.py", "getblockchaininfo"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Security
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=100m
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # ===========================================================================
  # REVERSE PROXY (NGINX) - Optional SSL termination
  # ===========================================================================
  nginx-proxy:
    image: nginx:alpine
    container_name: bitcoin-nginx-proxy
    restart: unless-stopped
    
    # Only start if SSL is enabled
    profiles:
      - ssl
    
    # Depends on wrapper
    depends_on:
      bitcoin-wrapper:
        condition: service_healthy
    
    # Configuration
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    
    # Ports
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    
    # Networks
    networks:
      - bitcoin-network
      - external-network
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    
    # Security
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,nodev,size=50m
      - /var/run:noexec,nosuid,nodev,size=10m
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # ===========================================================================
  # MONITORING (Optional) - Log aggregation
  # ===========================================================================
  log-aggregator:
    image: fluent/fluent-bit:latest
    container_name: bitcoin-log-aggregator
    restart: unless-stopped
    
    # Only start with monitoring profile
    profiles:
      - monitoring
    
    # Configuration
    volumes:
      - ./config/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - wrapper_logs:/app/logs:ro
      - ./logs/bitcoin:/bitcoin/logs:ro
      - ./logs/nginx:/nginx/logs:ro
    
    # Networks
    networks:
      - bitcoin-network
    
    # Security
    security_opt:
      - no-new-privileges:true
    read_only: true

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  bitcoin-network:
    driver: bridge
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
  
  external-network:
    driver: bridge

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  bitcoin_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BITCOIN_DATA_DIR:-./data/bitcoin}
  
  wrapper_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WRAPPER_LOGS_DIR:-./logs/wrapper}
  
  wrapper_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WRAPPER_CONFIG_DIR:-./config}

# =============================================================================
# SECRETS (for production)
# =============================================================================
secrets:
  bitcoin_rpc_user:
    file: ./secrets/bitcoin_rpc_user.txt
  bitcoin_rpc_password:
    file: ./secrets/bitcoin_rpc_password.txt

# =============================================================================
# CONFIGURATION EXAMPLES
# =============================================================================

# To run with SSL proxy:
# docker-compose --profile ssl up -d

# To run with monitoring:
# docker-compose --profile monitoring up -d

# To run full stack:
# docker-compose --profile ssl --profile monitoring up -d

# Development mode:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d